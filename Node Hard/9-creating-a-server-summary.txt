[00:00:00]
>> Speaker 1: Folk, we have in one, two, three lines of JavaScript built an entire server. Because in JavaScript, all the black stuff's JavaScript, there's not many words done in black. All the purple stuff is built in Node features and damn, look at that. It has a function that's gonna auto run.

[00:00:24]
It has auto insert data arguments. It has auto inserted arguments that it automatically made and it threw them into the function that's auto run. So that we had access to the incoming data from the incoming message, and access to the outgoing message to add data to it. The tweets or in this case a very boring message from the Twitter via the object that gets passed in.

[00:00:56]
Which has a bunch of functions, that when run, here we are executing the end function. Executing it, doing it, is going to give us back access to this message here and send that message back. Folk, this is the absolute essence of node. And we gonna see again, and again and again.

[00:01:17]
There is nothing else in this language. Whenever we use a background computer internal feature, it could be the file system. It could be the Open Network socket. It could be other features of the computer itself. Every time, we're going to use a built in label that sets up the node c plus plus feature that has access to the background feature.

[00:01:39]
We're going to need to add a function that node will auto run, whenever the background feature gets activity. Or if we're getting a file, for example, when the file gets into node, out of the file system, out of the a function that will auto run. We're then gonna need to design that function such that it's ready to receive incoming data, function said outgoing data, ready to receive the auto created and auto inserted data that's relevant.

[00:02:07]
In this case it's the input data, or the Sarah Rose's Max request data, and a bunch of functions in this case that allow us to access node again with specific responses to send back to Sarah Rose. We're gonna do this again, and again, and again, people

