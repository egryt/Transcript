[00:00:00]
>> Will Sentance: That final piece there was very much an appendix for everybody to enjoy knowing absolutely, intricately, intimately, every last piece of node. What is this monstrosity we see before us? But hopefully that can help you when you're going into those interviews. And also, the interesting piece, ability to have a function run when all IO callback functions are done.

[00:00:23]
That's pretty cool. And knowing exactly how these are going to execute it. Especially this promised-based API is in no degree more typical knowing that those associated functions will go in this very first queue. There it is people, some closing words node folk is the most powerful technology that has emerged for, I don't even know, 10 at least 10 years.

[00:00:45]
But even as it is something that allows you to build scale applications. Grand visions like LinkedIn, Netflix, Uber, etc. it really all comes down to labels from JavaScript that's trigger or setup node C ++ features that give us access to the computer's internal features. Cuz that's where the interesting stuff is on any computer, most importantly of all, the ability to access our networking feature of our computer.

[00:01:16]
We don't have access in JavaScript so we get access via C++. And when an inbound request comes we rely on node to take the function we told it to run, and run it automatic first in JavaScript, and fill in its inputs. It's-
>> Speaker 2: Execution.
>> Will Sentance: That's almost always the right word but not this time.

[00:01:39]
It's-
>> Speaker 2: Argument.
>> Will Sentance: Argument, well done. It's all done. It's argument with the exact relevant data. Is it the data from the file? Is it the error data, is it the inbound message, is it an object full of functions that let us set the data to send back?

[00:01:56]
And that's it, everything that, if we do another node talk. Maybe we will talk about the fact that we can split our JavaScript code up into multiple files, and then bring it so we can think about it separately. But have it all run at once, without it conflicting with each other.

[00:02:10]
So it's a module pattern using closure and that's for scoping my favorite feature JavaScript. We'll talk about probably things like cluster. We will probably talk about, there was something else, some specifics of details of error handling. And we'll probably actually use the new, went from experimental last week to stable in node version.

[00:02:32]
12 promise API promise based Fs file system, you can now use the promise structure to access a file system. We'll see that if we do another node talk. But for now people, thank you very much for your incredible commitment and engagement and see you at another talk soon.

[00:02:49]
Thank you, folk.
>> [APPLAUSE]

