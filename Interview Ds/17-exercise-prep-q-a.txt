[00:00:00]
>> Bianca Gandolfo: Let me know if anything isn't clear and I can clarify, okay.
>> Speaker 2: So how would you recommend we go about it, can we Google this? Or do you want us just to reason ourselves, or what's the best approach?
>> Bianca Gandolfo: Good question, so I recommend trying to read the reason through it yourself.

[00:00:16]
At home I would spend an hour trying to do it yourself. If you get stuck, then maybe this might be a little too advanced. And it might be worthwhile to look at different ways that this is implemented. And then give it a couple days, and then come back and see if you can remember the general technique.

[00:00:38]
But don't memorize it, don't be like, okay so first there's an if, then I need to make sure that there's an else. You shouldn't memorize the conditions and the logic, just kind of like the general approach. And then be able to implement it just from yourself.
>> Bianca Gandolfo: Does that make sense?

[00:01:00]
Most people should be able to get to it in an hour if they have been working with JavaScript for a while. If not, you might struggle a little bit with it, and that's fine, that's why we're all here. And in real life, you're never gonna implement a hash table or a hashing function.

[00:01:18]
You're probably never gonna implement a link list unless you're doing some crazy streaming library stuff. Which is very, I don't know, maybe you will. Stack and queue you will be using, but you won't be implementing from scratch most of the time, at least I never have. And then arrays and strings, which is the other kind of interview problems that we're gonna go over.

[00:01:39]
You're clearly never gonna implement those, cuz you just use them from scratch. So we're just totally skipping that, because you already know what an array is and what a string is, okay? And then for those who finish early, I have another prompt that's kind of fun. But that required is not gonna help you much with interviews, it's just kind of a brainteaser.

[00:02:03]
And it is to create an array data structure. Notice this is A-R-A-Y, not A-R-R-Y, so this is our fake array data structure. Where underlying we implement the array as a string. So you can think about pushing and popping from an array, and how you might handle that with a string.

[00:02:30]
Edge cases, things like length, it's kind of just a fun exercise. So if you had time, and you finished early, or you like these kinds of things, it's there for you.

